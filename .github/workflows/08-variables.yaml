name: 08 - variables

on:
    push:
    workflow_dispatch:
    
env:
  WORKFLOW_VAR: 'I am workflow env var'
  OVERWRITTEN: 'I will be overwritten'
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}
jobs:
    echo:
     runs-on: ubuntu-latest
     env:
        JOB_VAR: 'I am job env var'
        OVERWRITTEN: 'I have benn overwritten at the job level'
     steps:
        - name: Print Env Variables
          env:
            STEP_VAR: "I AM a step env var"
            step_var2: "I am  another step env var"
          run: |
            echo "Step env var: ${{ env.STEP_VAR }}"
            echo "Step env var 2: $step_var2"
            echo "Job env var: ${{ env.JOB_VAR }}"
            echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
            echo "Overwritten: ${{ env.OVERWRITTEN }}"
        - name: Overwrite job Variable
          env:
            OVERWRITTEN: 'I have been overwritten at the step level'
          run: |
            echo "Step env var: ${{ env.OVERWRITTEN }}"
    echo2:
      runs-on: ubuntu-latest
      steps:
       - name: Print Variables
         run: |
          echo "org var: ${{ vars.ORG_VAR }}"
          echo "org overwritten var: ${{ vars.OVERWRITTEN_VAR }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
    
    echo-prod:
      runs-on: ubuntu-latest
      environment: prod
      steps:
       - name: Print Prod Variables
         run: |
          echo "org var: ${{ vars.ORG_VAR }}"
          echo "org overwritten var: ${{ vars.OVERWRITTEN_VAR }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environment var: ${{ vars.TARGET_VAR}}"

    echo-undefined:
      runs-on: ubuntu-latest
      steps:
       - name: Print undefined Variables
         run: |
          echo "org var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
    


